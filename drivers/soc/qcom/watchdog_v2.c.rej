diff a/drivers/soc/qcom/watchdog_v2.c b/drivers/soc/qcom/watchdog_v2.c	(rejected hunks)
@@ -30,6 +30,10 @@
 #include <soc/qcom/memory_dump.h>
 #include <soc/qcom/watchdog.h>
 
+#ifdef CONFIG_LGE_HANDLE_PANIC
+#include <soc/qcom/lge/lge_handle_panic.h>
+#endif
+
 #define MODULE_NAME "msm_watchdog"
 #define WDT0_ACCSCSSNBARK_INT 0
 #define TCSR_WDT_CFG	0x30
@@ -78,6 +82,9 @@ struct msm_watchdog_data {
 	struct task_struct *watchdog_task;
 	struct timer_list pet_timer;
 	struct completion pet_complete;
+#ifdef CONFIG_LGE_HANDLE_PANIC
+	unsigned long long alive_time[NR_CPUS];
+#endif
 };
 
 /*
@@ -104,12 +111,36 @@ module_param(WDT_HZ, long, 0);
 static int ipi_opt_en;
 module_param(ipi_opt_en, int, 0);
 
+#ifdef CONFIG_LGE_HANDLE_PANIC
+static void __iomem *msm_timer0_base;
+
+void __iomem *wdt_timer_get_timer0_base(void)
+{
+	return msm_timer0_base;
+}
+
+static void wdt_timer_set_timer0_base(void __iomem * iomem)
+{
+	msm_timer0_base = iomem;
+}
+#endif
+
 static void dump_cpu_alive_mask(struct msm_watchdog_data *wdog_dd)
 {
+#ifdef CONFIG_LGE_HANDLE_PANIC
+	int cpu;
+#endif
 	static char alive_mask_buf[MASK_SIZE];
 	cpulist_scnprintf(alive_mask_buf, MASK_SIZE,
 						&wdog_dd->alive_mask);
 	printk(KERN_INFO "cpu alive mask from last pet %s\n", alive_mask_buf);
+
+#ifdef CONFIG_LGE_HANDLE_PANIC
+	for_each_cpu(cpu, cpu_present_mask) {
+		printk(KERN_INFO "cpu%d alive time = %llu\n",
+				cpu, wdog_dd->alive_time[cpu]);
+	}
+#endif
 }
 
 static int msm_watchdog_suspend(struct device *dev)
@@ -707,6 +759,9 @@ static int msm_watchdog_probe(struct platform_device *pdev)
 		goto err;
 	}
 	init_watchdog_data(wdog_dd);
+#ifdef CONFIG_LGE_HANDLE_PANIC
+	wdt_timer_set_timer0_base(wdog_dd->base);
+#endif
 	return 0;
 err:
 	kzfree(wdog_dd);
